{"version":3,"sources":["GlobalStyle.js","App/Buttons/styled.js","App/Buttons/index.js","App/Form/styled.js","App/Form/index.js","App/Header/styled.js","App/Header/index.js","App/Section/styled.js","App/Section/index.js","App/Tasks/styled.js","App/Tasks/index.js","App/Container/styled.js","App/index.js","App/useTasks.js","reportWebVitals.js","index.js","theme.js"],"names":["GlobalStyle","createGlobalStyle","normalize","theme","colors","silver","StyledButtonContainer","styled","div","breakpoint","StyledButton","button","buttonColors","teal","basic","hover","activ","disabled","Buttons","tasks","hideDone","toggleHideDone","setAllDone","length","onClick","every","done","StyledForm","form","Input","input","Button","white","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","trimedNewTaskContent","trim","ref","value","placeholder","autoFocus","onChange","target","current","focus","StyledHeader","header","Title","h1","Header","title","StyledSection","section","SubHeader","SubTitle","h2","Section","body","extraHeaderContent","List","ul","Item","li","hidden","css","Content","span","black","toggleDone","green","remove","red","active","Tasks","removeTask","toggleTaskDone","map","task","id","content","Container","main","App","setHideDone","savedTaskInLocaleStorage","localStorage","getItem","JSON","parse","setTasks","useEffect","setItem","stringify","filter","useTask","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a56973d2.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\nimport { normalize } from \"styled-normalize\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    ${normalize}\r\n\r\n    html {\r\n    box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n    box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n    font-family: 'Montserrat', sans-serif;\r\n    background-color: ${({ theme }) => theme.colors.silver};\r\n    }\r\n`;","import styled from \"styled-components\"\r\n\r\nexport const StyledButtonContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 25px;\r\n    margin: 15px;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint}px){\r\n        grid-template-columns: 1fr;\r\n        margin: 25px;\r\n    }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    border: none;\r\n    color: ${({ theme }) => theme.colors.buttonColors.teal.basic};\r\n    background-color: transparent;\r\n    transition: 1s;\r\n\r\n    &:hover{\r\n        color: ${({ theme }) => theme.colors.buttonColors.teal.hover};\r\n        cursor: pointer;\r\n    }\r\n\r\n    &:active{\r\n        color: ${({ theme }) => theme.colors.buttonColors.teal.activ};\r\n    }\r\n\r\n    &:disabled{\r\n        color: ${({ theme }) => theme.colors.buttonColors.disabled};\r\n        cursor: not-allowed;\r\n    }\r\n`;","import { StyledButtonContainer, StyledButton } from \"./styled\"\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    <StyledButtonContainer>\r\n        {tasks.length > 0 && (\r\n            <>\r\n                <StyledButton\r\n                    onClick={toggleHideDone}\r\n                    disabled={tasks.every(({ done }) => !done)}\r\n                >\r\n                    {hideDone ? \"Pokaż ukończone\" : \"Ukryj ukończone\"}\r\n                </StyledButton>\r\n                <StyledButton\r\n                    onClick={setAllDone}\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    Ukończ wszystkie\r\n                </StyledButton>\r\n            </>\r\n        )}\r\n    </StyledButtonContainer>\r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\"\r\n\r\nexport const StyledForm = styled.form`\r\n    display: flex;\r\n    padding: 10px;\r\n    border-top: 1px solid ${({ theme }) => theme.colors.silver};\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint}px){\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    flex-grow: 1;\r\n    padding: 10px;\r\n    margin: 10px;\r\n    border: 1px solid ${({ theme }) => theme.colors.silver};\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint}px){\r\n        margin: 10px 10px 0;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    padding: 10px;\r\n    margin: 10px;\r\n    border: none;\r\n    background-color: ${({ theme }) => theme.colors.buttonColors.teal.basic};\r\n    color: ${({ theme }) => theme.colors.white};\r\n    transition: 0.5s;\r\n\r\n    &:hover{\r\n        background-color: ${({ theme }) => theme.colors.buttonColors.teal.hover};\r\n        cursor: pointer;\r\n        transform: scale(1.1)\r\n    }\r\n\r\n    &:active{\r\n        background-color: ${({ theme }) => theme.colors.buttonColors.teal.activ};\r\n    }\r\n`;","import { useState, useRef } from \"react\";\r\nimport { StyledForm, Input, Button } from \"./styled\";\r\n\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n    const inputRef = useRef(null);\r\n\r\n    const focusInput = () => {\r\n        inputRef.current.focus();\r\n    };\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const trimedNewTaskContent = newTaskContent.trim();\r\n        if (trimedNewTaskContent.length > 0) {\r\n            addNewTask(trimedNewTaskContent);\r\n        }\r\n        setNewTaskContent(\"\");\r\n    };\r\n\r\n    return (\r\n        <StyledForm onSubmit={onFormSubmit}>\r\n            <Input\r\n                ref={inputRef}\r\n                value={newTaskContent}\r\n                placeholder=\"Co jest do zrobienia?\"\r\n                autoFocus\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n            />\r\n            <Button onClick={focusInput}>\r\n                Dodaj zadanie\r\n            </Button>\r\n        </StyledForm>\r\n    );\r\n};\r\n\r\nexport default Form;","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n    margin: 20px auto 15px;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n    margin: 20px auto 15px;\r\n`;","import { StyledHeader, Title } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n    <StyledHeader>\r\n        <Title>{title}</Title>\r\n    </StyledHeader>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    margin: 0 auto 10px;\r\n`;\r\n\r\nexport const SubHeader = styled.header`\r\n    display: grid;\r\n    grid-template-columns: 2fr auto auto;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint}px){\r\n        grid-template-columns: 1fr;   \r\n    }\r\n`;\r\n\r\nexport const SubTitle = styled.h2`\r\n    padding: 20px;\r\n    margin: 0;\r\n    align-items: center;\r\n    font-size: 20px;\r\n`;","import { StyledSection, SubHeader, SubTitle } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n    <StyledSection>\r\n        <SubHeader>\r\n            <SubTitle >{title}</SubTitle>\r\n            {extraHeaderContent}\r\n        </SubHeader>\r\n        {body}\r\n    </StyledSection>\r\n);\r\n\r\nexport default Section;","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    padding: 25px 10px;\r\n    margin: 0 auto;\r\n    border-top: 1px solid ${({ theme }) => theme.colors.silver};\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    padding: 10px;\r\n    border-bottom: 1px solid ${({ theme }) => theme.colors.silver};\r\n    display: grid;\r\n    grid-template-columns: 30px 1fr 30px;\r\n    align-items: center;\r\n    grid-gap: 15px;\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    word-break: break-all;\r\n\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through ${({ theme }) => theme.colors.black};\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    color: ${({ theme }) => theme.colors.white};\r\n    border: none;\r\n    width: 30px;\r\n    height: 30px;\r\n    transition: 1s;\r\n\r\n    ${({ toggleDone }) => toggleDone && css`\r\n        background-color: ${({ theme }) => theme.colors.buttonColors.green.basic};\r\n\r\n        &:hover{\r\n            background-color: ${({ theme }) => theme.colors.buttonColors.green.hover};\r\n            cursor: pointer;\r\n        }\r\n\r\n        &:active{ \r\n            background-color: ${({ theme }) => theme.colors.buttonColors.green.activ};\r\n        }\r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n        background-color: ${({ theme }) => theme.colors.buttonColors.red.basic};\r\n\r\n        &:hover{\r\n            background-color: ${({ theme }) => theme.colors.buttonColors.red.hover};\r\n            cursor: pointer;\r\n        }\r\n\r\n        &:active{\r\n            background-color: ${({ theme }) => theme.colors.buttonColors.red.active};\r\n        }\r\n    `}\r\n`;","import { List, Item, Content, Button } from \"./styled\"\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <List>\r\n        {tasks.map(task => (\r\n            <Item\r\n                key={task.id}\r\n                hidden={task.done && hideDone}\r\n            >\r\n                <Button\r\n                    toggleDone\r\n                    onClick={() => toggleTaskDone(task.id)}\r\n                >\r\n                    {task.done ? \"✔\" : \"\"}\r\n                </Button>\r\n                <Content done={task.done}>\r\n                    {task.content}\r\n                </Content>\r\n                <Button\r\n                    remove\r\n                    onClick={() => removeTask(task.id)}\r\n                >\r\n                    🗑\r\n                </Button>\r\n            </Item>\r\n        ))}\r\n    </List>\r\n);\r\n\r\nexport default Tasks;","import styled from \"styled-components\";\r\n\r\nconst Container = styled.main`\r\n    max-width: 1000px;\r\n    margin: 0 auto;\r\n    padding: 10px;\r\n`;\r\n\r\nexport default Container","import { useState } from \"react\";\r\nimport { useTask } from \"./useTasks\";\r\nimport Buttons from \"./Buttons\";\r\nimport Form from \"./Form\";\r\nimport Header from \"./Header\";\r\nimport Section from \"./Section\";\r\nimport Tasks from \"./Tasks\";\r\nimport Container from \"./Container/styled\";\r\n\r\nfunction App() {\r\n  const [hideDone, setHideDone] = useState(false);\r\n\r\n  const toggleHideDone = () => {\r\n    setHideDone(hideDone => !hideDone);\r\n  };\r\n\r\n  const {\r\n    tasks,\r\n    removeTask,\r\n    toggleTaskDone,\r\n    setAllDone,\r\n    addNewTask\r\n  } = useTask();\r\n\r\n  return (\r\n    <Container>\r\n      <Header\r\n        title=\"Lista zadań\"\r\n      />\r\n\r\n      <Section\r\n        title=\"Dodaj nowe zadanie\"\r\n        body={\r\n          <Form addNewTask={addNewTask} />\r\n        }\r\n      />\r\n\r\n      <Section\r\n        title=\"Lista zadań\"\r\n        body={\r\n          <Tasks\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            removeTask={removeTask}\r\n            toggleTaskDone={toggleTaskDone}\r\n          />\r\n        }\r\n        extraHeaderContent={\r\n          <Buttons\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            toggleHideDone={toggleHideDone}\r\n            setAllDone={setAllDone}\r\n          />\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n};\r\nexport default App;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useTask = () => {\r\n    const savedTaskInLocaleStorage = localStorage.getItem(\"tasks\");\r\n\r\n    const [tasks, setTasks] = useState(\r\n        JSON.parse(savedTaskInLocaleStorage) || []\r\n    );\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n    }, [tasks]);\r\n\r\n    const removeTask = (id) => {\r\n        setTasks(tasks => tasks.filter(task => task.id !== id));\r\n    };\r\n\r\n    const toggleTaskDone = (id) => {\r\n        setTasks(tasks => tasks.map(task => {\r\n            if (task.id === id) {\r\n                return { ...task, done: !task.done };\r\n            };\r\n\r\n            return task;\r\n        }));\r\n    };\r\n\r\n    const setAllDone = () => {\r\n        setTasks(tasks => tasks.map(task => ({\r\n            ...task,\r\n            done: true,\r\n        })));\r\n    };\r\n\r\n    const addNewTask = (content) => {\r\n        setTasks(tasks => [\r\n            ...tasks,\r\n            {\r\n                content,\r\n                done: false,\r\n                id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n            },\r\n        ]);\r\n    };\r\n\r\n    return {\r\n        tasks,\r\n        removeTask,\r\n        toggleTaskDone,\r\n        setAllDone,\r\n        addNewTask\r\n    };\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from './GlobalStyle';\nimport { theme } from \"./theme\"\nimport { ThemeProvider } from \"styled-components\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n    colors: {\r\n        silver: \"rgb(228, 228, 228)\",\r\n        white: \"rgb(255, 255, 255)\",\r\n        black: \"rgb(0, 0, 0)\",\r\n\r\n        buttonColors: {\r\n            disabled: \"rgb(179, 179, 179)\",\r\n\r\n            teal: {\r\n                basic: \"rgb(0, 102, 102)\",\r\n                hover: \"rgb(0, 204, 204)\",\r\n                activ: \"rgb(0, 255, 255)\",\r\n            },\r\n\r\n            green: {\r\n                basic: \"rgb(0, 128, 0)\",\r\n                hover: \"rgb(0, 153, 0)\",\r\n                activ: \"rgb(0, 179, 0)\",\r\n            },\r\n            \r\n            red: {\r\n                basic: \"rgb(220, 20, 60)\",\r\n                hover: \"rgb(234, 31, 72)\",\r\n                activ: \"rgb(236, 54, 91)\",\r\n            }\r\n        }\r\n    },\r\n\r\n    breakpoint: 768,\r\n};"],"sourceRoot":""}