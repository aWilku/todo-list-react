{"version":3,"sources":["Buttons/index.js","Form/index.js","Header/index.js","Section/index.js","Tasks/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Buttons","tasks","hideDone","toggleHideDone","setAllDone","className","length","onClick","disabled","every","done","Form","addNewTask","useState","newTaskContent","setNewTaskContent","onSubmit","event","preventDefault","newTaskContentTrimed","trim","value","placeholder","autoFocus","onChange","target","Header","title","Section","body","extraHeaderContent","Tasks","removeTask","toggleTaskDone","map","task","id","content","Container","children","App","setHideDone","setTask","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41eb29dc.chunk.js","sourcesContent":["import \"./style.css\"\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    <div className=\"buttons\">\r\n        {tasks.length > 0 && (\r\n            <>\r\n                <button\r\n                    onClick={toggleHideDone}\r\n                    className=\"buttons__button\"\r\n                    disabled={tasks.every(({ done }) => !done)}\r\n                >\r\n                    {hideDone ? \"PokaÅ¼ ukoÅ„czone\" : \"Ukryj ukoÅ„czone\"}\r\n                </button>\r\n                <button\r\n                    onClick={setAllDone}\r\n                    className=\"buttons__button\"\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    UkoÅ„cz wszystkie\r\n                </button>\r\n            </>\r\n        )}\r\n    </div>\r\n);\r\n\r\nexport default Buttons;","import { useState } from \"react\";\r\nimport \"./style.css\"\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newTaskContentTrimed = newTaskContent.trim();\r\n        if (newTaskContentTrimed.length > 0) {\r\n            addNewTask(newTaskContentTrimed);\r\n        }\r\n        setNewTaskContent(\"\");\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit}>\r\n            <input\r\n                value={newTaskContent}\r\n                className=\"form__input\"\r\n                placeholder=\"Co jest do zrobienia?\"\r\n                autoFocus\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n            />\r\n            <button className=\"form__button\">Dodaj zadanie</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import \"./style.css\"\r\n\r\nconst Header = ({ title }) => (\r\n    <header className=\"header\">\r\n        <h1 className=\"header__title\">{title}</h1>\r\n    </header>\r\n)\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n    <section className=\"section\">\r\n        <header className=\"section__header\">\r\n            <h2 className=\"section__title\">{title}</h2>\r\n            {extraHeaderContent}\r\n        </header>\r\n        {body}\r\n    </section>\r\n)\r\n\r\nexport default Section;","import \"./style.css\"\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <ul className=\"taskList\">\r\n        {tasks.map(task => (\r\n            <li key={task.id} className={`taskList__element ${(task.done && hideDone) ? \"taskList__element--hidden\" : \"\"}`}>\r\n                <button\r\n                    className=\"taskList__button taskList__button--done\"\r\n                    onClick={() => toggleTaskDone(task.id)}\r\n                >\r\n                    {task.done ? \"âœ”\" : \"\"}\r\n                </button>\r\n                <span className={`taskList__text${task.done ? \" taskList__text--done\" : \"\"}`}>\r\n                    {task.id}. {task.content}\r\n                </span>\r\n                <button\r\n                    className=\"taskList__button taskList__button--remove\"\r\n                    onClick={() => removeTask(task.id)}\r\n                >\r\n                    ðŸ—‘\r\n                </button>\r\n            </li>\r\n        ))}\r\n    </ul >\r\n);\r\n\r\nexport default Tasks;","import \"./style.css\"\r\n\r\nconst Container = ({ children }) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n)\r\n\r\nexport default Container;","import { useState } from \"react\";\nimport Buttons from \"./Buttons\";\nimport Form from \"./Form\";\nimport Header from \"./Header\";\nimport Section from \"./Section\";\nimport Tasks from \"./Tasks\";\nimport Container from \"./Container\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  const [tasks, setTask] = useState([]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const removeTask = (id) => {\n    setTask(tasks => tasks.filter(task => task.id !== id));\n  };\n\n  const toggleTaskDone = (id) => {\n    setTask(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      }\n\n      return task;\n    }));\n  };\n\n  const setAllDone = () => {\n    setTask(tasks => tasks.map(task => ({\n      ...task,\n      done: true,\n    })));\n  };\n\n  const addNewTask = (content) => {\n    setTask(tasks => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      },\n    ])\n  };\n\n  return (\n    <Container>\n      <Header\n        title=\"Lista zadaÅ„\"\n      />\n\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={\n          <Form addNewTask={addNewTask} />\n        }\n      />\n\n      <Section\n        title=\"Lista zadaÅ„\"\n        body={\n          <Tasks\n            tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone}\n          />\n        }\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />\n        }\n      />\n    </Container>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}